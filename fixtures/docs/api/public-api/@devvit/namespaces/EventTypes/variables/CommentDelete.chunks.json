[
  {
    "pageContent": "<path>Variable: CommentDelete, Type declaration, create(), Parameters, base?</path>\n[**@devvit/public-api v0.11.19-dev**](../../../../README.md)\n# Variable: CommentDelete\n**CommentDelete**: `object`\n## Type declaration\n### $type\n**$type**: `\"devvit.events.v1alpha.CommentDelete\"`\n### create()\n#### Parameters\n##### base?\n###### author?\n{ `banned`: `boolean`; `description`: `string`; `flair`: { `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }; `iconImage`: `string`; `id`: `string`; `isGold`: `boolean`; `karma`: `number`; `name`: `string`; `snoovatarImage`: `string`; `spam`: `boolean`; `suspended`: `boolean`; `url`: `string`; }\n###### author.banned?\n`boolean`\n###### author.description?\n`string`\n###### author.flair?\n{ `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }\n###### author.flair.backgroundColor?\n`string`\n###### author.flair.cssClass?\n`string`\n###### author.flair.enabled?\n`boolean`\n###### author.flair.subredditId?\n`string`\n###### author.flair.templateId?\n`string`\n###### author.flair.text?\n`string`\n###### author.flair.textColor?\n`string`\n###### author.flair.userId?\n`string`\n###### author.iconImage?\n`string`\n###### author.id?\n`string`\n###### author.isGold?\n`boolean`\n###### author.karma?\n`number`\n###### author.name?\n`string`\n###### author.snoovatarImage?\n`string`\n###### author.spam?\n`boolean`\n###### author.suspended?\n`boolean`\n###### author.url?\n`string`\n###### commentId?\n`string`\n###### createdAt?\n`Date`\n###### deletedAt?\n`Date`\n###### parentId?\n`string`\n###### postId?\n`string`\n###### reason?\n[`DeletionReason`](../../../../enumerations/DeletionReason.md)\n###### source?\n[`EventSource`](../../../../enumerations/EventSource.md)\n###### subreddit?",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: CommentDelete",
        "Type declaration",
        "create()",
        "Parameters",
        "base?"
      ],
      "level": 0
    }
  },
  {
    "pageContent": "<path>Variable: CommentDelete, Type declaration, fromPartial(), Parameters, object, author.flair.enabled?</path>\n{ `id`: `string`; `name`: `string`; `nsfw`: `boolean`; `permalink`: `string`; `quarantined`: `boolean`; `rating`: `SubredditRating`; `spam`: `boolean`; `subscribersCount`: `number`; `topics`: `string`\\[\\]; `type`: `SubredditType`; }\n###### subreddit.id?\n`string`\n###### subreddit.name?\n`string`\n###### subreddit.nsfw?\n`boolean`\n###### subreddit.permalink?\n`string`\n###### subreddit.quarantined?\n`boolean`\n###### subreddit.rating?\n`SubredditRating`\n###### subreddit.spam?\n`boolean`\n###### subreddit.subscribersCount?\n`number`\n###### subreddit.topics?\n`string`\\[\\]\n###### subreddit.type?\n`SubredditType`\n#### Returns\n[`CommentDelete`](../interfaces/CommentDelete.md)\n### decode()\n#### Parameters\n##### input\n`Uint8Array`<`ArrayBufferLike`\\> | `Reader`\n##### length?\n`number`\n#### Returns\n[`CommentDelete`](../interfaces/CommentDelete.md)\n### encode()\n#### Parameters\n##### message\n[`CommentDelete`](../interfaces/CommentDelete.md)\n##### writer?\n`Writer`\n#### Returns\n`Writer`\n### fromJSON()\n#### Parameters\n##### object\n`any`\n#### Returns\n[`CommentDelete`](../interfaces/CommentDelete.md)\n### fromPartial()\n#### Parameters\n##### object\n###### author?\n{ `banned`: `boolean`; `description`: `string`; `flair`: { `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }; `iconImage`: `string`; `id`: `string`; `isGold`: `boolean`; `karma`: `number`; `name`: `string`; `snoovatarImage`: `string`; `spam`: `boolean`; `suspended`: `boolean`; `url`: `string`; }\n###### author.banned?\n`boolean`\n###### author.description?\n`string`\n###### author.flair?\n{ `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }\n###### author.flair.backgroundColor?\n`string`\n###### author.flair.cssClass?\n`string`\n###### author.flair.enabled?\n`boolean`",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: CommentDelete",
        "Type declaration",
        "fromPartial()",
        "Parameters",
        "object",
        "author.flair.enabled?"
      ],
      "level": 3
    }
  },
  {
    "pageContent": "<path>Variable: CommentDelete, Type declaration, toJSON(), Returns</path>\n###### author.flair.subredditId?\n`string`\n###### author.flair.templateId?\n`string`\n###### author.flair.text?\n`string`\n###### author.flair.textColor?\n`string`\n###### author.flair.userId?\n`string`\n###### author.iconImage?\n`string`\n###### author.id?\n`string`\n###### author.isGold?\n`boolean`\n###### author.karma?\n`number`\n###### author.name?\n`string`\n###### author.snoovatarImage?\n`string`\n###### author.spam?\n`boolean`\n###### author.suspended?\n`boolean`\n###### author.url?\n`string`\n###### commentId?\n`string`\n###### createdAt?\n`Date`\n###### deletedAt?\n`Date`\n###### parentId?\n`string`\n###### postId?\n`string`\n###### reason?\n[`DeletionReason`](../../../../enumerations/DeletionReason.md)\n###### source?\n[`EventSource`](../../../../enumerations/EventSource.md)\n###### subreddit?\n{ `id`: `string`; `name`: `string`; `nsfw`: `boolean`; `permalink`: `string`; `quarantined`: `boolean`; `rating`: `SubredditRating`; `spam`: `boolean`; `subscribersCount`: `number`; `topics`: `string`\\[\\]; `type`: `SubredditType`; }\n###### subreddit.id?\n`string`\n###### subreddit.name?\n`string`\n###### subreddit.nsfw?\n`boolean`\n###### subreddit.permalink?\n`string`\n###### subreddit.quarantined?\n`boolean`\n###### subreddit.rating?\n`SubredditRating`\n###### subreddit.spam?\n`boolean`\n###### subreddit.subscribersCount?\n`number`\n###### subreddit.topics?\n`string`\\[\\]\n###### subreddit.type?\n`SubredditType`\n#### Returns\n[`CommentDelete`](../interfaces/CommentDelete.md)\n### toJSON()\n#### Parameters\n##### message\n[`CommentDelete`](../interfaces/CommentDelete.md)\n#### Returns\n`unknown`",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "path": [
        "Variable: CommentDelete",
        "Type declaration",
        "toJSON()",
        "Returns"
      ],
      "level": 3
    }
  }
]