[
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, create(), Parameters, base?</path>\n[**@devvit/public-api v0.11.19-dev**](../../../../README.md)\n# Variable: PostUpdate\n**PostUpdate**: `object`\n## Type declaration\n### $type\n**$type**: `\"devvit.events.v1alpha.PostUpdate\"`\n### create()\n#### Parameters\n##### base?\n###### author?\n{ `banned`: `boolean`; `description`: `string`; `flair`: { `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }; `iconImage`: `string`; `id`: `string`; `isGold`: `boolean`; `karma`: `number`; `name`: `string`; `snoovatarImage`: `string`; `spam`: `boolean`; `suspended`: `boolean`; `url`: `string`; }\n###### author.banned?\n`boolean`\n###### author.description?\n`string`\n###### author.flair?\n{ `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }\n###### author.flair.backgroundColor?\n`string`\n###### author.flair.cssClass?\n`string`\n###### author.flair.enabled?\n`boolean`\n###### author.flair.subredditId?\n`string`\n###### author.flair.templateId?\n`string`\n###### author.flair.text?\n`string`\n###### author.flair.textColor?\n`string`\n###### author.flair.userId?\n`string`\n###### author.iconImage?\n`string`\n###### author.id?\n`string`\n###### author.isGold?\n`boolean`\n###### author.karma?\n`number`\n###### author.name?\n`string`\n###### author.snoovatarImage?\n`string`\n###### author.spam?\n`boolean`\n###### author.suspended?\n`boolean`\n###### author.url?\n`string`\n###### post?",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "create()",
        "Parameters",
        "base?"
      ],
      "level": 0
    }
  },
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, create(), Parameters, base?</path>\n{ `authorFlair`: { `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }; `authorId`: `string`; `createdAt`: `number`; `crosspostParentId`: `string`; `crowdControlLevel`: `CrowdControlLevel`; `deleted`: `boolean`; `distinguished`: `DistinguishType`; `downvotes`: `number`; `galleryImages`: `string`\\[\\]; `gildings`: `number`; `id`: `string`; `ignoreReports`: `boolean`; `isApproved`: `boolean`; `isArchived`: `boolean`; `isClubContent`: `boolean`; `isGallery`: `boolean`; `isImage`: `boolean`; `isLocked`: `boolean`; `isMeta`: `boolean`; `isMultiMedia`: `boolean`; `isPoll`: `boolean`; `isPromoted`: `boolean`; `isSelf`: `boolean`; `isSpoiler`: `boolean`; `isSticky`: `boolean`; `isVideo`: `boolean`; `languageCode`: `string`; `linkFlair`: { `backgroundColor`: `string`; `cssClass`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; }; `media`: { `oembed`: { `authorName`: `string`; `authorUrl`: `string`; `description`: `string`; `height`: `number`; `html`: `string`; `providerName`: `string`; `providerUrl`: `string`; `thumbnailHeight`: `number`; `thumbnailUrl`: `string`; `thumbnailWidth`: `number`; `title`: `string`; `type`: `string`; `version`: `string`; `width`: `number`; }; `redditVideo`: { `bitrateKbps`: `number`; `dashUrl`: `string`; `duration`: `number`; `fallbackUrl`: `string`; `height`: `number`; `hlsUrl`: `string`; `isGif`: `boolean`; `scrubberMediaUrl`: `string`; `transcodingStatus`: `string`; `width`: `number`; }; `type`: `string`; }; `mediaUrls`: `string`\\[\\]; `nsfw`: `boolean`; `numComments`: `number`; `numReports`: `number`; `permalink`: `string`; `score`: `number`; `selftext`: `string`; `spam`: `boolean`; `subredditId`: `string`; `thumbnail`: `string`; `title`: `string`; `type`: `string`; `unlisted`: `boolean`; `updatedAt`: `number`; `upvotes`: `number`; `url`: `string`; }\n###### post.authorFlair?",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "create()",
        "Parameters",
        "base?"
      ],
      "level": 6
    }
  },
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, create(), Parameters, base?</path>\n{ `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }\n###### post.authorFlair.backgroundColor?\n`string`\n###### post.authorFlair.cssClass?\n`string`\n###### post.authorFlair.enabled?\n`boolean`\n###### post.authorFlair.subredditId?\n`string`\n###### post.authorFlair.templateId?\n`string`\n###### post.authorFlair.text?\n`string`\n###### post.authorFlair.textColor?\n`string`\n###### post.authorFlair.userId?\n`string`\n###### post.authorId?\n`string`\n###### post.createdAt?\n`number`\n###### post.crosspostParentId?\n`string`\n###### post.crowdControlLevel?\n`CrowdControlLevel`\n###### post.deleted?\n`boolean`\n###### post.distinguished?\n`DistinguishType`\n###### post.downvotes?\n`number`\n###### post.galleryImages?\n`string`\\[\\]\n###### post.gildings?\n`number`\n###### post.id?\n`string`\n###### post.ignoreReports?\n`boolean`\n###### post.isApproved?\n`boolean`\n###### post.isArchived?\n`boolean`\n###### post.isClubContent?\n`boolean`\n###### post.isGallery?\n`boolean`\n###### post.isImage?\n`boolean`\nIndicates if the post contains a single image rather than a gallery of multiple images, which is indicated by the is\\_gallery field.\n###### post.isLocked?\n`boolean`\n###### post.isMeta?\n`boolean`\n###### post.isMultiMedia?\n`boolean`\n###### post.isPoll?\n`boolean`\n###### post.isPromoted?\n`boolean`\n###### post.isSelf?\n`boolean`\n###### post.isSpoiler?\n`boolean`\n###### post.isSticky?\n`boolean`\n###### post.isVideo?\n`boolean`\n###### post.languageCode?\n`string`\n###### post.linkFlair?\n{ `backgroundColor`: `string`; `cssClass`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; }\n###### post.linkFlair.backgroundColor?\n`string`\n###### post.linkFlair.cssClass?\n`string`\n###### post.linkFlair.templateId?\n`string`\n###### post.linkFlair.text?\n`string`\n###### post.linkFlair.textColor?\n`string`\n###### post.media?",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "create()",
        "Parameters",
        "base?"
      ],
      "level": 6
    }
  },
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, create(), Parameters, base?</path>\n{ `oembed`: { `authorName`: `string`; `authorUrl`: `string`; `description`: `string`; `height`: `number`; `html`: `string`; `providerName`: `string`; `providerUrl`: `string`; `thumbnailHeight`: `number`; `thumbnailUrl`: `string`; `thumbnailWidth`: `number`; `title`: `string`; `type`: `string`; `version`: `string`; `width`: `number`; }; `redditVideo`: { `bitrateKbps`: `number`; `dashUrl`: `string`; `duration`: `number`; `fallbackUrl`: `string`; `height`: `number`; `hlsUrl`: `string`; `isGif`: `boolean`; `scrubberMediaUrl`: `string`; `transcodingStatus`: `string`; `width`: `number`; }; `type`: `string`; }\n###### post.media.oembed?\n{ `authorName`: `string`; `authorUrl`: `string`; `description`: `string`; `height`: `number`; `html`: `string`; `providerName`: `string`; `providerUrl`: `string`; `thumbnailHeight`: `number`; `thumbnailUrl`: `string`; `thumbnailWidth`: `number`; `title`: `string`; `type`: `string`; `version`: `string`; `width`: `number`; }\n###### post.media.oembed.authorName?\n`string`\n###### post.media.oembed.authorUrl?\n`string`\n###### post.media.oembed.description?\n`string`\n###### post.media.oembed.height?\n`number`\n###### post.media.oembed.html?\n`string`\n###### post.media.oembed.providerName?\n`string`\n###### post.media.oembed.providerUrl?\n`string`\n###### post.media.oembed.thumbnailHeight?\n`number`\n###### post.media.oembed.thumbnailUrl?\n`string`\n###### post.media.oembed.thumbnailWidth?\n`number`\n###### post.media.oembed.title?\n`string`\n###### post.media.oembed.type?\n`string`\n###### post.media.oembed.version?\n`string`\n###### post.media.oembed.width?\n`number`\n###### post.media.redditVideo?\n{ `bitrateKbps`: `number`; `dashUrl`: `string`; `duration`: `number`; `fallbackUrl`: `string`; `height`: `number`; `hlsUrl`: `string`; `isGif`: `boolean`; `scrubberMediaUrl`: `string`; `transcodingStatus`: `string`; `width`: `number`; }\n###### post.media.redditVideo.bitrateKbps?\n`number`\n###### post.media.redditVideo.dashUrl?\n`string`\n###### post.media.redditVideo.duration?",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "create()",
        "Parameters",
        "base?"
      ],
      "level": 6
    }
  },
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, fromJSON()</path>\n`number`\n###### post.media.redditVideo.fallbackUrl?\n`string`\n###### post.media.redditVideo.height?\n`number`\n###### post.media.redditVideo.hlsUrl?\n`string`\n###### post.media.redditVideo.isGif?\n`boolean`\n###### post.media.redditVideo.scrubberMediaUrl?\n`string`\n###### post.media.redditVideo.transcodingStatus?\n`string`\n###### post.media.redditVideo.width?\n`number`\n###### post.media.type?\n`string`\n###### post.mediaUrls?\n`string`\\[\\]\n###### post.nsfw?\n`boolean`\n###### post.numComments?\n`number`\n###### post.numReports?\n`number`\n###### post.permalink?\n`string`\n###### post.score?\n`number`\n###### post.selftext?\n`string`\nrename to text?\n###### post.spam?\n`boolean`\n###### post.subredditId?\n`string`\n###### post.thumbnail?\n`string`\n###### post.title?\n`string`\n###### post.type?\n`string`\n###### post.unlisted?\n`boolean`\n###### post.updatedAt?\n`number`\n###### post.upvotes?\n`number`\n###### post.url?\n`string`\n###### previousBody?\n`string`\n###### subreddit?\n{ `id`: `string`; `name`: `string`; `nsfw`: `boolean`; `permalink`: `string`; `quarantined`: `boolean`; `rating`: `SubredditRating`; `spam`: `boolean`; `subscribersCount`: `number`; `topics`: `string`\\[\\]; `type`: `SubredditType`; }\n###### subreddit.id?\n`string`\n###### subreddit.name?\n`string`\n###### subreddit.nsfw?\n`boolean`\n###### subreddit.permalink?\n`string`\n###### subreddit.quarantined?\n`boolean`\n###### subreddit.rating?\n`SubredditRating`\n###### subreddit.spam?\n`boolean`\n###### subreddit.subscribersCount?\n`number`\n###### subreddit.topics?\n`string`\\[\\]\n###### subreddit.type?\n`SubredditType`\n#### Returns\n[`PostUpdate`](../interfaces/PostUpdate.md)\n### decode()\n#### Parameters\n##### input\n`Uint8Array`<`ArrayBufferLike`\\> | `Reader`\n##### length?\n`number`\n#### Returns\n[`PostUpdate`](../interfaces/PostUpdate.md)\n### encode()\n#### Parameters\n##### message\n[`PostUpdate`](../interfaces/PostUpdate.md)\n##### writer?\n`Writer`\n#### Returns\n`Writer`\n### fromJSON()\n#### Parameters\n##### object\n`any`\n#### Returns",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "fromJSON()"
      ],
      "level": 3
    }
  },
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, fromPartial(), Parameters, object</path>\n[`PostUpdate`](../interfaces/PostUpdate.md)\n### fromPartial()\n#### Parameters\n##### object\n###### author?\n{ `banned`: `boolean`; `description`: `string`; `flair`: { `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }; `iconImage`: `string`; `id`: `string`; `isGold`: `boolean`; `karma`: `number`; `name`: `string`; `snoovatarImage`: `string`; `spam`: `boolean`; `suspended`: `boolean`; `url`: `string`; }\n###### author.banned?\n`boolean`\n###### author.description?\n`string`\n###### author.flair?\n{ `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }\n###### author.flair.backgroundColor?\n`string`\n###### author.flair.cssClass?\n`string`\n###### author.flair.enabled?\n`boolean`\n###### author.flair.subredditId?\n`string`\n###### author.flair.templateId?\n`string`\n###### author.flair.text?\n`string`\n###### author.flair.textColor?\n`string`\n###### author.flair.userId?\n`string`\n###### author.iconImage?\n`string`\n###### author.id?\n`string`\n###### author.isGold?\n`boolean`\n###### author.karma?\n`number`\n###### author.name?\n`string`\n###### author.snoovatarImage?\n`string`\n###### author.spam?\n`boolean`\n###### author.suspended?\n`boolean`\n###### author.url?\n`string`\n###### post?",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "fromPartial()",
        "Parameters",
        "object"
      ],
      "level": 3
    }
  },
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, fromPartial(), Parameters, object</path>\n{ `authorFlair`: { `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }; `authorId`: `string`; `createdAt`: `number`; `crosspostParentId`: `string`; `crowdControlLevel`: `CrowdControlLevel`; `deleted`: `boolean`; `distinguished`: `DistinguishType`; `downvotes`: `number`; `galleryImages`: `string`\\[\\]; `gildings`: `number`; `id`: `string`; `ignoreReports`: `boolean`; `isApproved`: `boolean`; `isArchived`: `boolean`; `isClubContent`: `boolean`; `isGallery`: `boolean`; `isImage`: `boolean`; `isLocked`: `boolean`; `isMeta`: `boolean`; `isMultiMedia`: `boolean`; `isPoll`: `boolean`; `isPromoted`: `boolean`; `isSelf`: `boolean`; `isSpoiler`: `boolean`; `isSticky`: `boolean`; `isVideo`: `boolean`; `languageCode`: `string`; `linkFlair`: { `backgroundColor`: `string`; `cssClass`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; }; `media`: { `oembed`: { `authorName`: `string`; `authorUrl`: `string`; `description`: `string`; `height`: `number`; `html`: `string`; `providerName`: `string`; `providerUrl`: `string`; `thumbnailHeight`: `number`; `thumbnailUrl`: `string`; `thumbnailWidth`: `number`; `title`: `string`; `type`: `string`; `version`: `string`; `width`: `number`; }; `redditVideo`: { `bitrateKbps`: `number`; `dashUrl`: `string`; `duration`: `number`; `fallbackUrl`: `string`; `height`: `number`; `hlsUrl`: `string`; `isGif`: `boolean`; `scrubberMediaUrl`: `string`; `transcodingStatus`: `string`; `width`: `number`; }; `type`: `string`; }; `mediaUrls`: `string`\\[\\]; `nsfw`: `boolean`; `numComments`: `number`; `numReports`: `number`; `permalink`: `string`; `score`: `number`; `selftext`: `string`; `spam`: `boolean`; `subredditId`: `string`; `thumbnail`: `string`; `title`: `string`; `type`: `string`; `unlisted`: `boolean`; `updatedAt`: `number`; `upvotes`: `number`; `url`: `string`; }\n###### post.authorFlair?",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "fromPartial()",
        "Parameters",
        "object"
      ],
      "level": 6
    }
  },
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, fromPartial(), Parameters, object</path>\n{ `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }\n###### post.authorFlair.backgroundColor?\n`string`\n###### post.authorFlair.cssClass?\n`string`\n###### post.authorFlair.enabled?\n`boolean`\n###### post.authorFlair.subredditId?\n`string`\n###### post.authorFlair.templateId?\n`string`\n###### post.authorFlair.text?\n`string`\n###### post.authorFlair.textColor?\n`string`\n###### post.authorFlair.userId?\n`string`\n###### post.authorId?\n`string`\n###### post.createdAt?\n`number`\n###### post.crosspostParentId?\n`string`\n###### post.crowdControlLevel?\n`CrowdControlLevel`\n###### post.deleted?\n`boolean`\n###### post.distinguished?\n`DistinguishType`\n###### post.downvotes?\n`number`\n###### post.galleryImages?\n`string`\\[\\]\n###### post.gildings?\n`number`\n###### post.id?\n`string`\n###### post.ignoreReports?\n`boolean`\n###### post.isApproved?\n`boolean`\n###### post.isArchived?\n`boolean`\n###### post.isClubContent?\n`boolean`\n###### post.isGallery?\n`boolean`\n###### post.isImage?\n`boolean`\nIndicates if the post contains a single image rather than a gallery of multiple images, which is indicated by the is\\_gallery field.\n###### post.isLocked?\n`boolean`\n###### post.isMeta?\n`boolean`\n###### post.isMultiMedia?\n`boolean`\n###### post.isPoll?\n`boolean`\n###### post.isPromoted?\n`boolean`\n###### post.isSelf?\n`boolean`\n###### post.isSpoiler?\n`boolean`\n###### post.isSticky?\n`boolean`\n###### post.isVideo?\n`boolean`\n###### post.languageCode?\n`string`\n###### post.linkFlair?\n{ `backgroundColor`: `string`; `cssClass`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; }\n###### post.linkFlair.backgroundColor?\n`string`\n###### post.linkFlair.cssClass?\n`string`\n###### post.linkFlair.templateId?\n`string`\n###### post.linkFlair.text?\n`string`\n###### post.linkFlair.textColor?\n`string`\n###### post.media?",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "fromPartial()",
        "Parameters",
        "object"
      ],
      "level": 6
    }
  },
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, fromPartial(), Parameters, object</path>\n{ `oembed`: { `authorName`: `string`; `authorUrl`: `string`; `description`: `string`; `height`: `number`; `html`: `string`; `providerName`: `string`; `providerUrl`: `string`; `thumbnailHeight`: `number`; `thumbnailUrl`: `string`; `thumbnailWidth`: `number`; `title`: `string`; `type`: `string`; `version`: `string`; `width`: `number`; }; `redditVideo`: { `bitrateKbps`: `number`; `dashUrl`: `string`; `duration`: `number`; `fallbackUrl`: `string`; `height`: `number`; `hlsUrl`: `string`; `isGif`: `boolean`; `scrubberMediaUrl`: `string`; `transcodingStatus`: `string`; `width`: `number`; }; `type`: `string`; }\n###### post.media.oembed?\n{ `authorName`: `string`; `authorUrl`: `string`; `description`: `string`; `height`: `number`; `html`: `string`; `providerName`: `string`; `providerUrl`: `string`; `thumbnailHeight`: `number`; `thumbnailUrl`: `string`; `thumbnailWidth`: `number`; `title`: `string`; `type`: `string`; `version`: `string`; `width`: `number`; }\n###### post.media.oembed.authorName?\n`string`\n###### post.media.oembed.authorUrl?\n`string`\n###### post.media.oembed.description?\n`string`\n###### post.media.oembed.height?\n`number`\n###### post.media.oembed.html?\n`string`\n###### post.media.oembed.providerName?\n`string`\n###### post.media.oembed.providerUrl?\n`string`\n###### post.media.oembed.thumbnailHeight?\n`number`\n###### post.media.oembed.thumbnailUrl?\n`string`\n###### post.media.oembed.thumbnailWidth?\n`number`\n###### post.media.oembed.title?\n`string`\n###### post.media.oembed.type?\n`string`\n###### post.media.oembed.version?\n`string`\n###### post.media.oembed.width?\n`number`\n###### post.media.redditVideo?\n{ `bitrateKbps`: `number`; `dashUrl`: `string`; `duration`: `number`; `fallbackUrl`: `string`; `height`: `number`; `hlsUrl`: `string`; `isGif`: `boolean`; `scrubberMediaUrl`: `string`; `transcodingStatus`: `string`; `width`: `number`; }\n###### post.media.redditVideo.bitrateKbps?\n`number`\n###### post.media.redditVideo.dashUrl?\n`string`\n###### post.media.redditVideo.duration?",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "fromPartial()",
        "Parameters",
        "object"
      ],
      "level": 6
    }
  },
  {
    "pageContent": "<path>Variable: PostUpdate, Type declaration, toJSON(), Returns</path>\n`number`\n###### post.media.redditVideo.fallbackUrl?\n`string`\n###### post.media.redditVideo.height?\n`number`\n###### post.media.redditVideo.hlsUrl?\n`string`\n###### post.media.redditVideo.isGif?\n`boolean`\n###### post.media.redditVideo.scrubberMediaUrl?\n`string`\n###### post.media.redditVideo.transcodingStatus?\n`string`\n###### post.media.redditVideo.width?\n`number`\n###### post.media.type?\n`string`\n###### post.mediaUrls?\n`string`\\[\\]\n###### post.nsfw?\n`boolean`\n###### post.numComments?\n`number`\n###### post.numReports?\n`number`\n###### post.permalink?\n`string`\n###### post.score?\n`number`\n###### post.selftext?\n`string`\nrename to text?\n###### post.spam?\n`boolean`\n###### post.subredditId?\n`string`\n###### post.thumbnail?\n`string`\n###### post.title?\n`string`\n###### post.type?\n`string`\n###### post.unlisted?\n`boolean`\n###### post.updatedAt?\n`number`\n###### post.upvotes?\n`number`\n###### post.url?\n`string`\n###### previousBody?\n`string`\n###### subreddit?\n{ `id`: `string`; `name`: `string`; `nsfw`: `boolean`; `permalink`: `string`; `quarantined`: `boolean`; `rating`: `SubredditRating`; `spam`: `boolean`; `subscribersCount`: `number`; `topics`: `string`\\[\\]; `type`: `SubredditType`; }\n###### subreddit.id?\n`string`\n###### subreddit.name?\n`string`\n###### subreddit.nsfw?\n`boolean`\n###### subreddit.permalink?\n`string`\n###### subreddit.quarantined?\n`boolean`\n###### subreddit.rating?\n`SubredditRating`\n###### subreddit.spam?\n`boolean`\n###### subreddit.subscribersCount?\n`number`\n###### subreddit.topics?\n`string`\\[\\]\n###### subreddit.type?\n`SubredditType`\n#### Returns\n[`PostUpdate`](../interfaces/PostUpdate.md)\n### toJSON()\n#### Parameters\n##### message\n[`PostUpdate`](../interfaces/PostUpdate.md)\n#### Returns\n`unknown`",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: PostUpdate",
        "Type declaration",
        "toJSON()",
        "Returns"
      ],
      "level": 3
    }
  }
]