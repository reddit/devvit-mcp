[
  {
    "pageContent": "<path>Variable: SubredditSubscribe, Type declaration, create(), Parameters, base?, subscriber.iconImage?</path>\n[**@devvit/public-api v0.11.19-dev**](../../../../README.md)\n# Variable: SubredditSubscribe\n**SubredditSubscribe**: `object`\n## Type declaration\n### $type\n**$type**: `\"devvit.events.v1alpha.SubredditSubscribe\"`\n### create()\n#### Parameters\n##### base?\n###### subreddit?\n{ `id`: `string`; `name`: `string`; `nsfw`: `boolean`; `permalink`: `string`; `quarantined`: `boolean`; `rating`: `SubredditRating`; `spam`: `boolean`; `subscribersCount`: `number`; `topics`: `string`\\[\\]; `type`: `SubredditType`; }\n###### subreddit.id?\n`string`\n###### subreddit.name?\n`string`\n###### subreddit.nsfw?\n`boolean`\n###### subreddit.permalink?\n`string`\n###### subreddit.quarantined?\n`boolean`\n###### subreddit.rating?\n`SubredditRating`\n###### subreddit.spam?\n`boolean`\n###### subreddit.subscribersCount?\n`number`\n###### subreddit.topics?\n`string`\\[\\]\n###### subreddit.type?\n`SubredditType`\n###### subscriber?\n{ `banned`: `boolean`; `description`: `string`; `flair`: { `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }; `iconImage`: `string`; `id`: `string`; `isGold`: `boolean`; `karma`: `number`; `name`: `string`; `snoovatarImage`: `string`; `spam`: `boolean`; `suspended`: `boolean`; `url`: `string`; }\n###### subscriber.banned?\n`boolean`\n###### subscriber.description?\n`string`\n###### subscriber.flair?\n{ `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }\n###### subscriber.flair.backgroundColor?\n`string`\n###### subscriber.flair.cssClass?\n`string`\n###### subscriber.flair.enabled?\n`boolean`\n###### subscriber.flair.subredditId?\n`string`\n###### subscriber.flair.templateId?\n`string`\n###### subscriber.flair.text?\n`string`\n###### subscriber.flair.textColor?\n`string`\n###### subscriber.flair.userId?\n`string`\n###### subscriber.iconImage?\n`string`",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Variable: SubredditSubscribe",
        "Type declaration",
        "create()",
        "Parameters",
        "base?",
        "subscriber.iconImage?"
      ],
      "level": 0
    }
  },
  {
    "pageContent": "<path>Variable: SubredditSubscribe, Type declaration, fromPartial(), Parameters, object, subscriber.description?</path>\n###### subscriber.id?\n`string`\n###### subscriber.isGold?\n`boolean`\n###### subscriber.karma?\n`number`\n###### subscriber.name?\n`string`\n###### subscriber.snoovatarImage?\n`string`\n###### subscriber.spam?\n`boolean`\n###### subscriber.suspended?\n`boolean`\n###### subscriber.url?\n`string`\n#### Returns\n[`SubredditSubscribe`](../interfaces/SubredditSubscribe.md)\n### decode()\n#### Parameters\n##### input\n`Uint8Array`<`ArrayBufferLike`\\> | `Reader`\n##### length?\n`number`\n#### Returns\n[`SubredditSubscribe`](../interfaces/SubredditSubscribe.md)\n### encode()\n#### Parameters\n##### message\n[`SubredditSubscribe`](../interfaces/SubredditSubscribe.md)\n##### writer?\n`Writer`\n#### Returns\n`Writer`\n### fromJSON()\n#### Parameters\n##### object\n`any`\n#### Returns\n[`SubredditSubscribe`](../interfaces/SubredditSubscribe.md)\n### fromPartial()\n#### Parameters\n##### object\n###### subreddit?\n{ `id`: `string`; `name`: `string`; `nsfw`: `boolean`; `permalink`: `string`; `quarantined`: `boolean`; `rating`: `SubredditRating`; `spam`: `boolean`; `subscribersCount`: `number`; `topics`: `string`\\[\\]; `type`: `SubredditType`; }\n###### subreddit.id?\n`string`\n###### subreddit.name?\n`string`\n###### subreddit.nsfw?\n`boolean`\n###### subreddit.permalink?\n`string`\n###### subreddit.quarantined?\n`boolean`\n###### subreddit.rating?\n`SubredditRating`\n###### subreddit.spam?\n`boolean`\n###### subreddit.subscribersCount?\n`number`\n###### subreddit.topics?\n`string`\\[\\]\n###### subreddit.type?\n`SubredditType`\n###### subscriber?\n{ `banned`: `boolean`; `description`: `string`; `flair`: { `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }; `iconImage`: `string`; `id`: `string`; `isGold`: `boolean`; `karma`: `number`; `name`: `string`; `snoovatarImage`: `string`; `spam`: `boolean`; `suspended`: `boolean`; `url`: `string`; }\n###### subscriber.banned?\n`boolean`\n###### subscriber.description?\n`string`",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "path": [
        "Variable: SubredditSubscribe",
        "Type declaration",
        "fromPartial()",
        "Parameters",
        "object",
        "subscriber.description?"
      ],
      "level": 3
    }
  },
  {
    "pageContent": "<path>Variable: SubredditSubscribe, Type declaration, toJSON(), Returns</path>\n###### subscriber.flair?\n{ `backgroundColor`: `string`; `cssClass`: `string`; `enabled`: `boolean`; `subredditId`: `string`; `templateId`: `string`; `text`: `string`; `textColor`: `string`; `userId`: `string`; }\n###### subscriber.flair.backgroundColor?\n`string`\n###### subscriber.flair.cssClass?\n`string`\n###### subscriber.flair.enabled?\n`boolean`\n###### subscriber.flair.subredditId?\n`string`\n###### subscriber.flair.templateId?\n`string`\n###### subscriber.flair.text?\n`string`\n###### subscriber.flair.textColor?\n`string`\n###### subscriber.flair.userId?\n`string`\n###### subscriber.iconImage?\n`string`\n###### subscriber.id?\n`string`\n###### subscriber.isGold?\n`boolean`\n###### subscriber.karma?\n`number`\n###### subscriber.name?\n`string`\n###### subscriber.snoovatarImage?\n`string`\n###### subscriber.spam?\n`boolean`\n###### subscriber.suspended?\n`boolean`\n###### subscriber.url?\n`string`\n#### Returns\n[`SubredditSubscribe`](../interfaces/SubredditSubscribe.md)\n### toJSON()\n#### Parameters\n##### message\n[`SubredditSubscribe`](../interfaces/SubredditSubscribe.md)\n#### Returns\n`unknown`",
    "metadata": {
      "type": [
        "heading",
        "text"
      ],
      "path": [
        "Variable: SubredditSubscribe",
        "Type declaration",
        "toJSON()",
        "Returns"
      ],
      "level": 3
    }
  }
]