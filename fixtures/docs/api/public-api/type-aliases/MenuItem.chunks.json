[
  {
    "pageContent": "<path>Type Alias: MenuItem, Properties, postFilter?</path>\n[**@devvit/public-api v0.11.19-dev**](../README.md)\n# Type Alias: MenuItem\n**MenuItem** = `object`\n## Properties\n### description?\n`optional` **description**: `string`\nAn optional description for the menu item\n### forUserType?\n`optional` **forUserType**: [`MenuItemUserType`](MenuItemUserType.md) | [`MenuItemUserType`](MenuItemUserType.md)\\[\\]\nThe user type(s) that the menu item should be displayed for\n### label\n**label**: `string`\nThe label of the menu item\n### location\n**location**: [`MenuItemLocation`](MenuItemLocation.md) | [`MenuItemLocation`](MenuItemLocation.md)\\[\\]\nThe location(s) where the menu item should be displayed\n### onPress()\n**onPress**: (`event`, `context`) => `void` | `Promise`<`void`\\>\nA function that is called when the menu item is pressed\n#### Parameters\n##### event\n[`MenuItemOnPressEvent`](MenuItemOnPressEvent.md)\n##### context\n[`Context`](../@devvit/namespaces/Devvit/type-aliases/Context.md)\n#### Returns\n`void` | `Promise`<`void`\\>\n### postFilter?\n`optional` **postFilter**: [`MenuItemPostFilter`](MenuItemPostFilter.md)\n**`Experimental`**\nThe filter that applies to post menu items and has no effect on non-post actions",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Type Alias: MenuItem",
        "Properties",
        "postFilter?"
      ],
      "level": 0
    }
  }
]