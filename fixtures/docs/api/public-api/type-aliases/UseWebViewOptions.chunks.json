[
  {
    "pageContent": "<path>Type Alias: UseWebViewOptions<From, To>, Properties, url?</path>\n[**@devvit/public-api v0.11.19-dev**](../README.md)\n# Type Alias: UseWebViewOptions<From, To>\n**UseWebViewOptions**<`From`, `To`\\> = `object`\n## Type Parameters\n### From\n`From` _extends_ [`JSONValue`](JSONValue.md) = [`JSONValue`](JSONValue.md)\nMessage from web view to Devvit Blocks app.\n### To\n`To` _extends_ [`JSONValue`](JSONValue.md) = [`JSONValue`](JSONValue.md)\nMessage from Devvit Blocks app to web view.\n## Properties\n### onMessage\n**onMessage**: [`UseWebViewOnMessage`](UseWebViewOnMessage.md)<`From`, `To`\\>\nHandle UI events originating from the web view to be handled by a Devvit app\n### onUnmount()?\n`optional` **onUnmount**: (`hook`) => `void` | `Promise`<`void`\\>\nThe callback to run when the web view has been unmounted. Might be used to set state, stop or resume timers, or perform other tasks now that the web view is no longer visible.\n#### Parameters\n##### hook\n[`UseWebViewResult`](UseWebViewResult.md)<`To`\\>\n#### Returns\n`void` | `Promise`<`void`\\>\n#### Deprecated\nuse the page visibility API for now.\n### url?\n`optional` **url**: `string`\nRelative HTML asset filename like `foo/bar.html`. Defaults to index.html if omitted.",
    "metadata": {
      "type": [
        "text",
        "heading"
      ],
      "path": [
        "Type Alias: UseWebViewOptions<From, To>",
        "Properties",
        "url?"
      ],
      "level": 0
    }
  }
]